@use "../../base/variables" as *;

.error-state {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  padding: 40px 20px;

  .error-state-content {
    text-align: center;
    max-width: 500px;
    width: 100%;
    padding: 40px;
    border-radius: 20px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid var(--border-color);
    animation: errorStateFadeIn 0.6s ease-out;

    @media (max-width: 768px) {
      padding: 30px 20px;
      margin: 20px;
    }
  }

  .error-icon {
    margin-bottom: 24px;
    display: flex;
    justify-content: center;
    align-items: center;

    svg {
      filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
      animation: errorIconPulse 2s ease-in-out infinite;
    }
  }

  .error-title {
    font-family: var(--font-family);
    font-size: 28px;
    font-weight: 700;
    color: var(--text);
    margin-bottom: 16px;
    line-height: 1.2;

    @media (max-width: 768px) {
      font-size: 24px;
    }

    @media (max-width: 480px) {
      font-size: 20px;
    }
  }

  .error-description {
    font-family: var(--font-family);
    font-size: 16px;
    line-height: 1.6;
    color: var(--text-secondary);
    margin-bottom: 24px;
    opacity: 0.9;

    @media (max-width: 768px) {
      font-size: 14px;
    }
  }

  .error-details {
    border-radius: 12px;
    padding: 16px;
    margin-bottom: 24px;

    .error-message {
      font-family: var(--font-family);
      font-size: 14px;
      color: var(--text-tertiary);
      margin: 0;
      word-break: break-word;
      line-height: 1.5;
      font-style: italic;
    }
  }

  .error-retry-btn {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: 12px;
    padding: 14px 28px;
    font-family: var(--font-family);
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);

    &:hover {
      background: var(--primary-color-hover);
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
    }

    &:active {
      transform: translateY(0);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    &:focus {
      outline: none;
      box-shadow: 0 0 0 3px rgba(var(--primary-color-rgb), 0.3);
    }

    svg {
      transition: transform 0.3s ease;
    }

    &:hover svg {
      transform: rotate(180deg);
    }

    @media (max-width: 768px) {
      padding: 12px 24px;
      font-size: 14px;
    }
  }
}

@keyframes errorStateFadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes errorIconPulse {
  0%,
  100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
}

[data-theme="dark"] {
  .error-state {
    .error-state-content {
      border-color: var(--border-color);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .error-details {
      border-color: var(--border-color);
    }
  }
}

.error-retry-btn.loading {
  pointer-events: none;
  opacity: 0.7;

  svg {
    animation: spin 1s linear infinite;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
